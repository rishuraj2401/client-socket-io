{"version":3,"sources":["context/VideoContext.js","assests/video.svg","assests/man.svg","assests/video-off.svg","assests/msg_illus.svg","assests/msg.svg","assests/share_screen.svg","context/VideoState.js","components/Video/Editor.jsx","components/Video/Video.js","assests/phone.gif","assests/teams.mp3","assests/hang.svg","components/options/Options.js","components/Footer/Footer.js","Home.js","App.js","reportWebVitals.js","serviceWorker.js","index.js","components/options/Options.module.css"],"names":["VideoContext","createContext","socket","io","reconnectionDelayMax","VideoState","children","useState","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","chat","setChat","name","setName","call","setCall","me","setMe","userName","setUserName","otherUser","setOtherUser","myVdoStatus","setMyVdoStatus","userVdoStatus","setUserVdoStatus","myMicStatus","setMyMicStatus","userMicStatus","setUserMicStatus","msgRcv","setMsgRcv","screenShare","setScreenShare","room","setRoom","message","setMessage","myVideo","useRef","userVideo","connectionRef","screenTrackRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","localStorage","getItem","on","id","window","location","reload","type","currentMediaStatus","from","callerName","signal","isReceivingCall","value","msg","sender","setTimeout","Provider","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","console","log","leaveCall","destroy","answerCall","to","myMediaStatus","sendMsg","timestamp","Date","now","leaveCall1","updateVideo","currentStatus","getVideoTracks","enabled","updateMic","getAudioTracks","handleScreenSharing","onended","getDisplayMedia","cursor","screenTrack","getTracks","replaceTrack","streams","find","track","kind","catch","error","fullScreen","e","elem","target","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","joinRoom","Editor","useContext","messageReceived","setMessageReceived","codeM","sendMessage","timeoutRef","timeoutRef1","ref","options","theme","keymap","mode","onChange","onChanges","onKeyUp","value1","event","newValue","clearTimeout","length","handleChange","Search","Input","Video","sendMsgFunc","setSendMsg","isModalVisible","setIsModalVisible","dummy","scrollIntoView","behavior","showModal","showVal","notification","open","description","icon","MessageOutlined","style","color","className","textAlign","height","playsInline","muted","onClick","autoPlay","opacity","backgroundColor","position","size","UserOutlined","tabIndex","transform","aria-label","aria-hidden","src","Msg","alt","title","footer","visible","onOk","onCancel","maxHeight","map","Msg_Illus","placeholder","allowClear","enterButton","onSearch","ScreenShare","VideoIcon","VideoOff","top","left","padding","Options","idToCall","setIdToCall","Audio","play","pause","classes","marginBottom","prefix","maxLength","suffix","setItem","text","CopyOutlined","success","WhatsappShareButton","url","separator","WhatsappIcon","round","FacebookShareButton","FacebookIcon","TwitterShareButton","TwitterIcon","marginRight","InfoCircleOutlined","variant","Hang","PhoneOutlined","Teams","loop","display","justifyContent","Phone","Footer","Home","onLine","alert","cookies","document","cookie","split","i","eqPos","indexOf","substr","width","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.5a3de4ad.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\r\nconst VideoContext = createContext();\r\nexport default VideoContext;\r\n","export default __webpack_public_path__ + \"static/media/video.e038b670.svg\";","export default __webpack_public_path__ + \"static/media/man.2e482fe5.svg\";","export default __webpack_public_path__ + \"static/media/video-off.81281c31.svg\";","export default __webpack_public_path__ + \"static/media/msg_illus.a7fd59ce.svg\";","export default __webpack_public_path__ + \"static/media/msg.590bd963.svg\";","export default __webpack_public_path__ + \"static/media/share_screen.2998de9b.svg\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport VideoContext from \"./VideoContext\";\r\nimport { io } from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport { message } from \"antd\";\r\n\r\nconst URL = \"http://localhost:3001/\";\r\n// const SERVER_URL = \"http://localhost:5000/\";\r\n\r\n// export const socket = io(URL);\r\nexport const socket = io(\"https://satin-near-hornet.glitch.me/\" ,{\r\n  reconnectionDelayMax: 10000,\r\n});\r\n\r\nconst VideoState = ({ children }) => {\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [callEnded, setCallEnded] = useState(false);\r\n  const [stream, setStream] = useState();\r\n  const [chat, setChat] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [call, setCall] = useState({});\r\n  const [me, setMe] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [otherUser, setOtherUser] = useState(\"\");\r\n  const [myVdoStatus, setMyVdoStatus] = useState(true);\r\n  const [userVdoStatus, setUserVdoStatus] = useState();\r\n  const [myMicStatus, setMyMicStatus] = useState(true);\r\n  const [userMicStatus, setUserMicStatus] = useState();\r\n  const [msgRcv, setMsgRcv] = useState(\"\");\r\n  const [screenShare, setScreenShare] = useState(false)\r\n  const [room, setRoom] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const joinRoom = () => {\r\n    if (room !== \"\") {\r\n      socket.emit(\"join_room\", room);\r\n      console.log(room ,'is joining');\r\n    }\r\n  };\r\n  const myVideo = useRef();\r\n  const userVideo = useRef();\r\n  const connectionRef = useRef();\r\n  const screenTrackRef = useRef();\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((currentStream) => {\r\n        setStream(currentStream);\r\n        myVideo.current.srcObject = currentStream;\r\n      });\r\n    if (localStorage.getItem(\"name\")) {\r\n      setName(localStorage.getItem(\"name\"));\r\n    }\r\n    socket.on(\"me\", (id) => setMe(id));\r\n    socket.on(\"endCall\", () => {\r\n      window.location.reload();\r\n    });\r\n// -----------------------------------------------------------------------------\r\n\r\n    socket.on(\"updateUserMedia\", ({ type, currentMediaStatus }) => {\r\n      if (currentMediaStatus !== null || currentMediaStatus !== []) {\r\n        switch (type) {\r\n          case \"video\":\r\n            setUserVdoStatus(currentMediaStatus);\r\n            break;\r\n          case \"mic\":\r\n            setUserMicStatus(currentMediaStatus);\r\n            break;\r\n          default:\r\n            setUserMicStatus(currentMediaStatus[0]);\r\n            setUserVdoStatus(currentMediaStatus[1]);\r\n            break;\r\n        }\r\n      }\r\n    });\r\n\r\n    socket.on(\"callUser\", ({ from, name: callerName, signal }) => {\r\n      setCall({ isReceivingCall: true, from, name: callerName, signal });\r\n    });\r\n\r\n    socket.on(\"msgRcv\", ({ name, msg: value, sender }) => {\r\n      setMsgRcv({ value,sender });\r\n      setTimeout(() => {\r\n        setMsgRcv({});\r\n      }, 2000);\r\n    });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(chat);\r\n  // }, [chat]);\r\n\r\n  const answerCall = () => {\r\n    setCallAccepted(true);\r\n    setOtherUser(call.from);\r\n    const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n    peer.on(\"signal\", (data) => {\r\n      socket.emit(\"answerCall\", {\r\n        signal: data,\r\n        to: call.from,\r\n        userName: name,\r\n        type: \"both\",\r\n        myMediaStatus: [myMicStatus, myVdoStatus],\r\n      });\r\n    });\r\n\r\n    peer.on(\"stream\", (currentStream) => {\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n\r\n    peer.signal(call.signal);\r\n\r\n    connectionRef.current = peer;\r\n    console.log(connectionRef.current);\r\n  };\r\n\r\n  const callUser = (id) => {\r\n    const peer = new Peer({ initiator: true, trickle: false, stream });\r\n    setOtherUser(id);\r\n    peer.on(\"signal\", (data) => {\r\n      socket.emit(\"callUser\", {\r\n        userToCall: id,\r\n        signalData: data,\r\n        from: me,\r\n        name,\r\n      });\r\n    });\r\n\r\n    peer.on(\"stream\", (currentStream) => {\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n\r\n    socket.on(\"callAccepted\", ({ signal, userName }) => {\r\n      setCallAccepted(true);\r\n      setUserName(userName);\r\n      peer.signal(signal);\r\n      socket.emit(\"updateMyMedia\", {\r\n        type: \"both\",\r\n        currentMediaStatus: [myMicStatus, myVdoStatus],\r\n      });\r\n    });\r\n\r\n    connectionRef.current = peer;\r\n    console.log(connectionRef.current);\r\n  };\r\n\r\n  const updateVideo = () => {\r\n    setMyVdoStatus((currentStatus) => {\r\n      socket.emit(\"updateMyMedia\", {\r\n        type: \"video\",\r\n        currentMediaStatus: !currentStatus,\r\n      });\r\n      stream.getVideoTracks()[0].enabled = !currentStatus;\r\n      return !currentStatus;\r\n    });\r\n  };\r\n\r\n  const updateMic = () => {\r\n    setMyMicStatus((currentStatus) => {\r\n      socket.emit(\"updateMyMedia\", {\r\n        type: \"mic\",\r\n        currentMediaStatus: !currentStatus,\r\n      });\r\n      stream.getAudioTracks()[0].enabled = !currentStatus;\r\n      return !currentStatus;\r\n    });\r\n  };\r\n\r\n  \r\n    //SCREEN SHARING \r\n    const handleScreenSharing = () => {\r\n\r\n      if(!myVdoStatus){\r\n        message.error(\"Turn on your video to share the content\", 2);\r\n        return;\r\n      }\r\n    \r\n      if (!screenShare) {\r\n        navigator.mediaDevices\r\n          .getDisplayMedia({ cursor: true })\r\n          .then((currentStream) => {\r\n            const screenTrack = currentStream.getTracks()[0];\r\n\r\n  \r\n              // replaceTrack (oldTrack, newTrack, oldStream);\r\n              connectionRef.current.replaceTrack(\r\n                connectionRef.current.streams[0]\r\n                  .getTracks()\r\n                  .find((track) => track.kind === 'video'),\r\n                screenTrack,\r\n                stream\r\n              );\r\n  \r\n            // Listen click end\r\n            screenTrack.onended = () => {\r\n              connectionRef.current.replaceTrack(\r\n                  screenTrack,\r\n                  connectionRef.current.streams[0]\r\n                    .getTracks()\r\n                    .find((track) => track.kind === 'video'),\r\n                  stream\r\n                );\r\n\r\n              myVideo.current.srcObject = stream;\r\n              setScreenShare(false);\r\n            };\r\n  \r\n            myVideo.current.srcObject = currentStream;\r\n            screenTrackRef.current = screenTrack;\r\n            setScreenShare(true);\r\n          }).catch((error) => {\r\n            console.log(\"No stream for sharing\")\r\n          });\r\n      } else {\r\n        screenTrackRef.current.onended();\r\n      }\r\n    };\r\n\r\n     //full screen\r\n     const fullScreen = (e) => {\r\n      const elem = e.target;\r\n  \r\n      if (elem.requestFullscreen) {\r\n        elem.requestFullscreen();\r\n      } else if (elem.mozRequestFullScreen) {\r\n        /* Firefox */\r\n        elem.mozRequestFullScreen();\r\n      } else if (elem.webkitRequestFullscreen) {\r\n        /* Chrome, Safari & Opera */\r\n        elem.webkitRequestFullscreen();\r\n      } else if (elem.msRequestFullscreen) {\r\n        /* IE/Edge */\r\n        elem.msRequestFullscreen();\r\n      }\r\n    };\r\n\r\n  const leaveCall = () => {\r\n    setCallEnded(true);\r\n\r\n    connectionRef.current.destroy();\r\n    socket.emit(\"endCall\", { id: otherUser });\r\n    window.location.reload();\r\n  };\r\n\r\n  const leaveCall1 = () => {\r\n    socket.emit(\"endCall\", { id: otherUser });\r\n  };\r\n  const sendMsg = (value) => {\r\n    socket.emit(\"msgUser\", { name, to: otherUser, msg: value, sender: name });\r\n    let msg = {};\r\n    msg.msg = value;\r\n    msg.type = \"sent\";\r\n    msg.timestamp = Date.now();\r\n    msg.sender = name;\r\n    setChat([...chat, msg]);\r\n  };\r\n \r\n\r\n  return (\r\n    <VideoContext.Provider\r\n      value={{\r\n        otherUser,\r\n        call,\r\n        callAccepted,\r\n        myVideo,\r\n        userVideo,\r\n        stream,\r\n        name,\r\n        setName,\r\n        callEnded,\r\n        me,\r\n        callUser,\r\n        leaveCall,\r\n        answerCall,\r\n        sendMsg,\r\n        msgRcv,\r\n        chat,\r\n        setChat,\r\n        setMsgRcv,\r\n        setOtherUser,\r\n        leaveCall1,\r\n        userName,\r\n        myVdoStatus,\r\n        setMyVdoStatus,\r\n        userVdoStatus,\r\n        setUserVdoStatus,\r\n        updateVideo,\r\n        myMicStatus,\r\n        userMicStatus,\r\n        updateMic,\r\n        screenShare,\r\n        handleScreenSharing,\r\n        fullScreen,\r\n        room,\r\n        setRoom,\r\n        joinRoom,\r\n        message,\r\n        // messageReceived,\r\n        setMessage,\r\n        // setMessageReceived,\r\n        // sendMessage\r\n      }}\r\n    >\r\n      {children}\r\n    </VideoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default VideoState;\r\n","// import React from 'react';\r\nimport React, { useContext, useEffect, useState, useRef, useCallback, memo } from \"react\";\r\nimport VideoContext from \"../../context/VideoContext\";\r\nimport \"./Video.css\";\r\nimport { io } from \"socket.io-client\";\r\nimport { socket } from \"../../context/VideoState\";\r\nimport Codemirror from 'codemirror';\r\nimport CodeMirror from '@uiw/react-codemirror';\r\n// import 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/mode/javascript/javascript';\r\n// import 'codemirror/addon/edit/closetag';\r\n// import 'codemirror/addon/edit/closebrackets';\r\n// import 'codemirror/lib/codemirror.css'\r\n\r\n// import 'codemirror/mode/javascript/javascript'\r\n// import 'codemirror/mode/css/css'\r\n// import { Controlled as ControlledEditor } from 'react-codemirror2'\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\n// import 'codemirror/theme/material.css'\r\n// import 'codemirror/mode/xml/xml'\r\nimport 'codemirror/theme/dracula.css';\r\n//import { fromTextArea } from \"codemirror\";\r\n\r\nconst Editor = () => {\r\n  const {\r\n    call,\r\n    otherUser,\r\n    callAccepted,\r\n    myVideo,\r\n    userVideo,\r\n    stream,\r\n    name,\r\n    setName,\r\n    callEnded,\r\n    me,\r\n    callUser,\r\n    leaveCall,\r\n    answerCall,\r\n    sendMsg,\r\n    msgRcv,\r\n    chat,\r\n    setChat,\r\n    setMsgRcv,\r\n    setOtherUser,\r\n    leaveCall1,\r\n    userName,\r\n    myVdoStatus,\r\n    setMyVdoStatus,\r\n    userVdoStatus,\r\n    setUserVdoStatus,\r\n    updateVideo,\r\n    myMicStatus,\r\n    userMicStatus,\r\n    updateMic,\r\n    screenShare,\r\n    handleScreenSharing,\r\n    fullScreen,\r\n    room,\r\n    setRoom,\r\n    joinRoom,\r\n    message,\r\n    // messageReceived,\r\n    setMessage,\r\n    // setMessageReceived,\r\n    // sendMessage\r\n  } = useContext(VideoContext);\r\n  \r\n//  const [message ,setMessage]=useState(\"\") \r\nconst [messageReceived, setMessageReceived] = useState(\"\");\r\nconst codeM=useRef(null);\r\nconst sendMessage = () => {\r\n  socket.emit(\"send_message\", { message ,to:otherUser});\r\n};\r\nconst timeoutRef2 = useRef(null);\r\nconst onChanges =(value) => {\r\n  // const new1=value;\r\n  // clearTimeout(timeoutRef2.current);\r\n  // timeoutRef2.current = setTimeout(() => { \r\n  \r\nsetMessage(value)\r\n//   console.log('bmessage:', message);\r\n  // sendMessage();\r\n//  console.log(\"a:\",messageReceived)\r\n// //  keyup(value)\r\n\r\n//  },3) \r\n}\r\nconst keyup =(value1) => {\r\n    value1.preventDefault();\r\n\r\n  // setTimeout(() => {\r\n  // if(message !== value1 && message.length!==1 && value1.key !==\"Backspace\"){\r\n    // setMessage(value1);\r\n    console.log('value1:', value1);\r\n    console.log('message1:', message.length ,message); \r\n    sendMessage();\r\n    // console.log(\"a:\",messageReceived)}\r\n    //  else{\r\n    // sendMessage()\r\n    console.log(\"nothing\");\r\n  // }\r\n  // },1000);\r\n \r\n}\r\nconst timeoutRef = useRef(null);\r\nconst timeoutRef1 = useRef(null);\r\n\r\nfunction handleChange(event) {\r\n\r\n  const newValue = event;\r\n  clearTimeout(timeoutRef.current);\r\n  timeoutRef.current = setTimeout(() => {\r\n    setMessage(newValue);\r\n    console.log('value1:', newValue);\r\n    console.log('message1:', message.length ,message); \r\n  }, 3);\r\n  clearTimeout(timeoutRef1.current);\r\n  timeoutRef1.current = setTimeout(() => {\r\n    if(typeof message==='string'){\r\nconsole.log('rishu');\r\nsendMessage()\r\n\r\n    }\r\n  },3)\r\n}\r\n\r\nuseEffect(() => {\r\n \r\n  socket.on(\"receive_message\", (data) => {\r\n    setMessageReceived(data.message);\r\n  });\r\n}, [socket]);\r\n return(\r\n      <div>\r\n        <h1> Message:</h1>\r\n        <textarea id=\"code\">this</textarea>;\r\n       \r\n        <CodeMirror id=\"cod\"\r\n          value={messageReceived}\r\n          ref={codeM}\r\n          options = {{\r\n            theme: \"dracula\",\r\n            keymap: \"sublime\",\r\n            mode: \"javascript\",\r\n          }}\r\n           onChange={(value)=>{ onChanges(value)}}\r\n           onKeyUp={(value1)=>{handleChange(value1)}}\r\n       \r\n        />\r\n      </div>\r\n  );\r\n\r\n  }\r\nexport default Editor;\r\n\r\n// export default Editor;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react'\r\n// import 'codemirror/lib/codemirror.css'\r\n// import 'codemirror/theme/material.css'\r\n// import 'codemirror/mode/xml/xml'\r\n// import 'codemirror/mode/javascript/javascript'\r\n// import 'codemirror/mode/css/css'\r\n// import { Controlled as ControlledEditor } from 'react-codemirror2'\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\n//  const Editor=(props)=> {\r\n//   const {\r\n//     language,\r\n//     displayName,\r\n//     value,\r\n//     onChange,\r\n//     onKeyUp\r\n//   } = props\r\n//   const [open, setOpen] = useState(true)\r\n\r\n//   function handleChange(editor, data, value) {\r\n//     onChange(editor.getValue());\r\n//     onKeyUp(value);\r\n//   }\r\n\r\n//   return (\r\n//     <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n//       <div className=\"editor-title\">\r\n//         {displayName}\r\n//         <button\r\n//           type=\"button\"\r\n//           className=\"expand-collapse-btn\"\r\n//           onClick={() => setOpen(prevOpen => !prevOpen)}\r\n//         >\r\n//           <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n//         </button>\r\n//       </div>\r\n//       <ControlledEditor\r\n//         onBeforeChange={handleChange}\r\n//         value={value}\r\n//         className=\"code-mirror-wrapper\"\r\n//         options={{\r\n//           lineWrapping: true,\r\n//           lint: true,\r\n//           mode: language,\r\n//           theme: 'material',\r\n//           lineNumbers: true\r\n//         }}\r\n//       />\r\n//     </div>\r\n//   )\r\n// }\r\n// export default Editor;","import React, { useContext, useEffect, useState, useRef } from \"react\";\r\nimport VideoContext from \"../../context/VideoContext\";\r\nimport \"./Video.css\";\r\nimport { Card, Modal, Button, Input, notification, Avatar, message } from \"antd\";\r\nimport Man from \"../../assests/man.svg\";\r\nimport VideoIcon from \"../../assests/video.svg\";\r\nimport { io } from \"socket.io-client\";\r\nimport VideoOff from \"../../assests/video-off.svg\";\r\n// import Profile from \"../../assests/profile.svg\";\r\nimport Msg_Illus from \"../../assests/msg_illus.svg\";\r\nimport Msg from \"../../assests/msg.svg\";\r\nimport ScreenShare from '../../assests/share_screen.svg'\r\nimport { UserOutlined, MessageOutlined } from \"@ant-design/icons\";\r\nimport { socket } from \"../../context/VideoState\";\r\nimport Editor from \"./Editor\";\r\n// import Editor1 from \"./editor1\";\r\n\r\n// const socket = io()\r\nconst { Search } = Input;\r\nconst Video = () => {\r\n  const {\r\n    call,\r\n    callAccepted,\r\n    myVideo,\r\n    userVideo,\r\n    stream,\r\n    name,\r\n    setName,\r\n    callEnded,\r\n    me,\r\n    callUser,\r\n    leaveCall,\r\n    answerCall,\r\n    sendMsg: sendMsgFunc,\r\n    msgRcv,\r\n    chat,\r\n    setChat,\r\n    userName,\r\n    myVdoStatus,\r\n    screenShare,\r\n    fullScreen,\r\n    handleScreenSharing,\r\n    userVdoStatus,\r\n    updateVideo,\r\n    myMicStatus,\r\n    userMicStatus,\r\n    updateMic,\r\n    setMessage,\r\n    message,\r\n    otherUser\r\n  } = useContext(VideoContext);\r\n\r\n  const [sendMsg, setSendMsg] = useState(\"\");\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  // const [messageReceived, setMessageReceived] = useState(\"\");\r\n\r\n  // const sendMessage = () => {\r\n  //   socket.emit(\"send_message\", { message ,to:otherUser});\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   socket.on(\"receive_message\", (data) => {\r\n  //     setMessageReceived(data.message);\r\n  //   });\r\n  // }, [socket]);\r\n  socket.on(\"msgRcv\", ({ name, msg: value, sender }) => {\r\n    let msg = {};\r\n    msg.msg = value;\r\n    msg.type = \"rcv\";\r\n    msg.sender = sender;\r\n    msg.timestamp = Date.now();\r\n    setChat([...chat, msg]);\r\n  });\r\n\r\n  const dummy = useRef();\r\n\r\n  useEffect(() => {\r\n    if (dummy?.current) dummy.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [chat]);\r\n\r\n  const showModal = (showVal) => {\r\n    setIsModalVisible(showVal);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    if (value && value.length) sendMsgFunc(value);\r\n    setSendMsg(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (msgRcv.value && !isModalVisible) {\r\n      notification.open({\r\n        message: \"\",\r\n        description: `${msgRcv.sender}: ${msgRcv.value}`,\r\n        icon: <MessageOutlined style={{ color: \"#108ee9\" }} />,\r\n      });\r\n    }\r\n  }, [msgRcv]);\r\n//   const send=(e)=>{\r\n//     setMessage(e);\r\n//     sendMessage()\r\n//     // setFinal(message+messageReceived)\r\n//   }\r\n//  const [final, setFinal]=useState(message+messageReceived)\r\n  return (\r\n    <div className=\"grid\">\r\n      {<Editor />}\r\n    \r\n      {/* <Editor\r\n          language=\"xml\"\r\n          displayName=\"HTML\"\r\n          value={messageReceived}\r\n          onChange={(e)=>{send(e)}}\r\n          onKeyUp={(e)=>{send(e)}}\r\n        /> */}\r\n     {/* {messageReceived} */}\r\n      <div>\r\n             {/* <input\r\n        placeholder=\"Message...\"\r\n        onChange={(event)=>send(event)} onKeyUp={(event)=>send(event)}\r\n      /> */}\r\n      {/* <button onClick={sendMessage}> Send Message</button> */}\r\n      {/* <h1> Message:</h1>\r\n      {msgRcv} */}\r\n\r\n      {/* {chat.map((msg) => (\r\n                    <div\r\n                      className={msg.type === \"sent\" ? \"msg_sent\" : \"msg_rcv\"}\r\n                    >\r\n                      {msg.msg}\r\n        </div>))}\r\n        <Search\r\n                placeholder=\"your message\"\r\n                allowClear\r\n                className=\"input_msg\"\r\n                enterButton=\"Send 🚀\"\r\n                onChange={(e) => send(e)}\r\n                value={sendMsg}\r\n                size=\"large\"\r\n                onSearch={onSearch}\r\n              /> */}\r\n        </div>\r\n      {stream ? (\r\n        <div\r\n          style={{ textAlign: \"center\" }}\r\n          className=\"card\"\r\n          id={callAccepted && !callEnded ? \"video1\" : \"video3\"}\r\n        >\r\n          <div style={{ height: \"2rem\" }}>\r\n            <h3>{myVdoStatus && name}</h3>\r\n          </div>\r\n          <div className=\"video-avatar-container\">\r\n            <video\r\n              playsInline\r\n              muted\r\n              onClick={fullScreen}\r\n              ref={myVideo}\r\n              autoPlay\r\n              className=\"video-active\"\r\n              style={{\r\n                opacity: `${myVdoStatus ? \"1\" : \"0\"}`,\r\n              }}\r\n            />\r\n\r\n            <Avatar\r\n              style={{\r\n                backgroundColor: \"#116\",\r\n                position: \"absolute\",\r\n                opacity: `${myVdoStatus ? \"-1\" : \"2\"}`,\r\n              }}\r\n              size={98}\r\n              icon={!name && <UserOutlined />}\r\n            >\r\n              {name}\r\n            </Avatar>\r\n          </div>\r\n\r\n          <div className=\"iconsDiv\">\r\n            <div\r\n              className=\"icons\"\r\n              onClick={() => {\r\n                updateMic();\r\n              }}\r\n              tabIndex=\"0\"\r\n            >\r\n              <i\r\n                className={`fa fa-microphone${myMicStatus ? \"\" : \"-slash\"}`}\r\n                style={{ transform: \"scaleX(-1)\" }}\r\n                aria-label={`${myMicStatus ? \"mic on\" : \"mic off\"}`}\r\n                aria-hidden=\"true\"\r\n              ></i>\r\n            </div>\r\n\r\n            {callAccepted && !callEnded && (\r\n              <div\r\n                className=\"icons\"\r\n                onClick={() => {\r\n                  setIsModalVisible(!isModalVisible);\r\n                }}\r\n                tabIndex=\"0\"\r\n              >\r\n                <img src={Msg} alt=\"chat icon\" />\r\n              </div>\r\n            )}\r\n            <Modal\r\n              title=\"Chat\"\r\n              footer={null}\r\n              visible={isModalVisible}\r\n              onOk={() => showModal(false)}\r\n              onCancel={() => showModal(false)}\r\n              style={{ maxHeight: \"100px\" }}\r\n            >\r\n              {chat.length ? (\r\n                <div className=\"msg_flex\">\r\n                  {chat.map((msg) => (\r\n                    <div\r\n                      className={msg.type === \"sent\" ? \"msg_sent\" : \"msg_rcv\"}\r\n                    >\r\n                      {msg.msg}\r\n                    </div>\r\n                  ))}\r\n                  <div ref={dummy} id=\"no_border\"></div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"chat_img_div\">\r\n                  <img src={Msg_Illus} alt=\"msg_illus\" className=\"img_illus\" />\r\n                </div>\r\n              )}\r\n              <Search\r\n                placeholder=\"your message\"\r\n                allowClear\r\n                className=\"input_msg\"\r\n                enterButton=\"Send 🚀\"\r\n                onChange={(e) => setSendMsg(e.target.value)}\r\n                value={sendMsg}\r\n                size=\"large\"\r\n                onSearch={onSearch}\r\n              />\r\n            </Modal>\r\n            {callAccepted && !callEnded && (\r\n              <div\r\n                className=\"icons\"\r\n                onClick={() => handleScreenSharing()} \r\n                tabIndex=\"0\"\r\n              >\r\n                <img src={ScreenShare} alt=\"share screen\" />\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"icons\" onClick={() => updateVideo()} tabIndex=\"0\">\r\n              {myVdoStatus ? (\r\n                <img src={VideoIcon} alt=\"video on icon\" />\r\n              ) : (\r\n                <img src={VideoOff} alt=\"video off icon\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"bouncing-loader\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      )}\r\n\r\n      {callAccepted && !callEnded && userVideo && (\r\n        <div className=\"card2\" style={{ textAlign: \"center\" }} id=\"video2\">\r\n          <div style={{ height: \"2rem\" }}>\r\n            <h3>{userVdoStatus && (call.name || userName)}</h3>\r\n          </div>\r\n\r\n          <div className=\"video-avatar-container\">\r\n            <video\r\n              playsInline\r\n              ref={userVideo}             \r\n              onClick={fullScreen}\r\n              autoPlay\r\n              className=\"video-active\"\r\n              style={{\r\n                opacity: `${userVdoStatus ? \"1\" : \"0\"}`,\r\n              }}\r\n            />\r\n\r\n            <Avatar\r\n              style={{\r\n                backgroundColor: \"#116\",\r\n                position: \"absolute\",\r\n                opacity: `${userVdoStatus ? \"-1\" : \"2\"}`,\r\n              }}\r\n              size={98}\r\n              icon={!(userName || call.name) && <UserOutlined />}\r\n            >\r\n              {userName || call.name}\r\n            </Avatar>\r\n            {!userMicStatus && (\r\n              <i\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"0\",\r\n                  left: \"0\",\r\n                  padding: \"0.3rem\",\r\n                  backgroundColor: \"#fefefebf\",\r\n                }}\r\n                className=\"fad fa-volume-mute fa-2x\"\r\n                aria-hidden=\"true\"\r\n                aria-label=\"microphone muted\"\r\n              ></i>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","export default __webpack_public_path__ + \"static/media/phone.b2c1ae6b.gif\";","export default __webpack_public_path__ + \"static/media/teams.23d1d865.mp3\";","export default __webpack_public_path__ + \"static/media/hang.a09ef7b4.svg\";","import React, { useState, useContext, useEffect, useRef, useCallback } from \"react\";\r\nimport { Input, Button, Tooltip, Modal, message } from \"antd\";\r\nimport Phone from \"../../assests/phone.gif\";\r\nimport Teams from \"../../assests/teams.mp3\";\r\nimport * as classes from \"./Options.module.css\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport VideoContext from \"../../context/VideoContext\";\r\nimport Hang from \"../../assests/hang.svg\";\r\nimport {\r\n  TwitterIcon,\r\n  TwitterShareButton,\r\n  WhatsappShareButton,\r\n  WhatsappIcon,\r\n  FacebookIcon,\r\n  FacebookShareButton,\r\n} from \"react-share\";\r\nimport {\r\n  UserOutlined,\r\n  CopyOutlined,\r\n  InfoCircleOutlined,\r\n  PhoneOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { socket } from \"../../context/VideoState\";\r\n\r\nconst Options = () => {\r\n  const [idToCall, setIdToCall] = useState(\"\");\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const Audio = useRef();\r\n  const {\r\n    call,\r\n    callAccepted,\r\n    myVideo,\r\n    userVideo,\r\n    stream,\r\n    name,\r\n    setName,\r\n    callEnded,\r\n    me,\r\n    callUser,\r\n    leaveCall,\r\n    answerCall,\r\n    otherUser,\r\n    setOtherUser,\r\n    leaveCall1,\r\n    room,\r\n        setRoom,\r\n        joinRoom,\r\n        // message,\r\n        // messageReceived,\r\n        setMessage,\r\n        // setMessageReceived,\r\n  } = useContext(VideoContext);\r\n  \r\n  useEffect(() => {\r\n    if (isModalVisible) {\r\n      Audio?.current?.play();\r\n    } else Audio?.current?.pause();\r\n  }, [isModalVisible]);\r\n\r\n  const showModal = (showVal) => {\r\n    setIsModalVisible(showVal);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    leaveCall1();\r\n    window.location.reload();\r\n  };\r\n  useEffect(() => {\r\n    if (call.isReceivingCall && !callAccepted) {\r\n      setIsModalVisible(true);\r\n      setOtherUser(call.from);\r\n    } else setIsModalVisible(false);\r\n  }, [call.isReceivingCall]);\r\n\r\n  // const calljoin = ()=>{\r\n  //   // if (name.length) callUser(idToCall);\r\n  //   // else message.error(\"Please enter your name to call!\");\r\n  //   joinRoom();\r\n  //   console.log(room ,'joiiiined');\r\n  // }\r\n  // var x=me;\r\n  //  const copyC=(event)=>{\r\n  //   message.success(\"Code copied successfully!\");\r\n   \r\n  //   setRoom((x));\r\n  //   // joinRoom();\r\n  //   console.log('this is 2' ,room);\r\n\r\n  //  }\r\n  //  const copyC1=(event)=>{\r\n   \r\n  //   setRoom((x));\r\n  //   joinRoom();\r\n  //   console.log('this is 1' ,room);\r\n\r\n  //  }\r\n  // const callset=(event)=>{\r\n  //   setIdToCall(event.target.value) \r\n  //   setRoom(event.target.value);\r\n  //   console.log('this is 3' ,room);\r\n  //   }\r\n  return (\r\n    <div className={classes.options}>\r\n      <div style={{ marginBottom: \"0.5rem\" }}>\r\n        <h2>Account Info</h2>\r\n        <Input\r\n          size=\"large\"\r\n          placeholder=\"Your name\"\r\n          prefix={<UserOutlined />}\r\n          maxLength={15}\r\n          suffix={<small>{name.length}/15</small>}\r\n          value={name}\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n            localStorage.setItem(\"name\", e.target.value);\r\n          }}\r\n          className={classes.inputgroup}\r\n        />\r\n\r\n        <div className={classes.share_options}>\r\n          <CopyToClipboard text={me}>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<CopyOutlined />}\r\n              className={classes.btn}\r\n              tabIndex=\"0\"\r\n              onClick={(event)=>{\r\n                message.success(\"Code copied successfully!\");}}\r\n            \r\n            >\r\n              Copy code\r\n            </Button>\r\n          </CopyToClipboard>\r\n\r\n          <div className={classes.share_social}>\r\n            <WhatsappShareButton\r\n              url={`https://video-chat-mihir.vercel.app/`}\r\n              title={`Join this meeting with the given code \"${me}\"\\n`}\r\n              separator=\"Link: \"\r\n              className={classes.share_icon}\r\n            >\r\n              <WhatsappIcon size={26} round />\r\n            </WhatsappShareButton>\r\n            <FacebookShareButton\r\n              url={`https://video-chat-mihir.vercel.app/`}\r\n              title={`Join this meeting with the given code \"${me}\"\\n`}\r\n              className={classes.share_icon}\r\n            >\r\n              <FacebookIcon size={26} round />\r\n            </FacebookShareButton>\r\n            <TwitterShareButton\r\n              url={`https://video-chat-mihir.vercel.app/`}\r\n              title={`Join this meeting with the given code  \"${me}\"\\n`}\r\n              className={classes.share_icon}\r\n            >\r\n              <TwitterIcon size={26} round className={classes.share_border} />\r\n            </TwitterShareButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ marginBottom: \"0.5rem\" }}>\r\n        <h2>Make a call</h2>\r\n\r\n        <Input\r\n          placeholder=\"Enter code to call\"\r\n          size=\"large\"\r\n          className={classes.inputgroup}\r\n          value={idToCall}\r\n          onChange={(e) => {setIdToCall(e.target.value) } }\r\n          // // onChange={(event) => {\r\n          // //   setRoom(event.target.value);\r\n          // // }}\r\n          // onChange={(event)=>{callset(event)}}\r\n          // onKeyUp={(event)=>{callset(event)}}\r\n          style={{ marginRight: \"0.5rem\", marginBottom: \"0.5rem\" }}\r\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n          suffix={\r\n            <Tooltip title=\"Enter code of the other user\">\r\n              <InfoCircleOutlined style={{ color: \"rgba(0,0,0,.45)\" }} />\r\n            </Tooltip>\r\n          }\r\n        />\r\n\r\n        {callAccepted && !callEnded ? (\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={leaveCall}\r\n            className={classes.hang}\r\n            tabIndex=\"0\"\r\n          >\r\n            <img src={Hang} alt=\"hang up\" style={{ height: \"15px\" }} />\r\n            &nbsp; Hang up\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<PhoneOutlined />}\r\n            onClick={() => {\r\n              if (name.length) {callUser(idToCall) ;}\r\n              else message.error(\"Please enter your name to call!\");\r\n            }}\r\n\r\n            // onClick={calljoin}\r\n            // onClickCapture={calljoin}\r\n            // onKeyUp={calljoin}\r\n            // onKeyUpCapture={calljoin}\r\n            className={classes.btn}\r\n            tabIndex=\"0\"\r\n          >\r\n            Call\r\n          </Button>\r\n         )} \r\n      </div>\r\n\r\n      {call.isReceivingCall && !callAccepted && (\r\n        <>\r\n          <audio src={Teams} loop ref={Audio} />\r\n          <Modal\r\n            title=\"Incoming Call\"\r\n            visible={isModalVisible}\r\n            onOk={() => showModal(false)}\r\n            onCancel={handleCancel}\r\n            footer={null}\r\n          >\r\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n              <h1>\r\n                {call.name} is calling you:{\" \"}\r\n                <img\r\n                  src={Phone}\r\n                  alt=\"phone ringing\"\r\n                  className={classes.phone}\r\n                  style={{ display: \"inline-block\" }}\r\n                />\r\n              </h1>\r\n            </div>\r\n            <div className={classes.btnDiv}>\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.answer}\r\n                color=\"#29bb89\"\r\n                icon={<PhoneOutlined />}\r\n                onClick={() => {\r\n                  answerCall();\r\n                  Audio.current.pause();\r\n                }}\r\n                tabIndex=\"0\"\r\n              >\r\n                Answer\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.decline}\r\n                icon={<PhoneOutlined />}\r\n                onClick={() => {\r\n                  setIsModalVisible(false);\r\n                  Audio.current.pause();\r\n                }}\r\n                tabIndex=\"0\"\r\n              >\r\n                Decline\r\n              </Button>\r\n            </div>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import React from \"react\";\r\nimport { HeartTwoTone } from \"@ant-design/icons\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n    </>\r\n     \r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { useEffect } from \"react\";\r\n\r\nimport Video from \"./components/Video/Video\";\r\nimport VideoState from \"./context/VideoState\";\r\n\r\nimport Options from \"./components/options/Options\";\r\nimport Footer from \"./components/Footer/Footer\";\r\n\r\nconst Home = () => {\r\n  useEffect(() => {\r\n    if (!navigator.onLine) alert(\"Connect to internet!\");\r\n  }, [navigator]);\r\n \r\n useEffect(()=>{\r\n    var cookies = document.cookie.split(\";\");\r\n\r\n    for (var i = 0; i < cookies.length; i++) {\r\n        var cookie = cookies[i];\r\n        var eqPos = cookie.indexOf(\"=\");\r\n        var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\r\n        document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\r\n    }\r\n }, [])\r\n  return (\r\n    <VideoState>\r\n      <div className=\"App\" style={{ height: \"100%\", width: \"100%\" }}>\r\n        <Video />\r\n        <Options />\r\n        {/* <Footer /> */}\r\n      </div>\r\n    </VideoState>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React , {useContext, useEffect, useState} from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nconst App = () => {\r\n \r\n  return (\r\n    <>\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" component={Home} />\r\n      </Switch>\r\n      <Footer />\r\n    </Router>\r\n</>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\nserviceWorker.register();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"Options_options__1Rv8p\",\"btn\":\"Options_btn__2RI41\",\"inputgroup\":\"Options_inputgroup__15A6d\",\"btnDiv\":\"Options_btnDiv__ndAnz\",\"phone\":\"Options_phone__3jZi5\",\"answer\":\"Options_answer__1OsoT\",\"decline\":\"Options_decline__iES9U\",\"hang\":\"Options_hang__1gdRc\",\"share_options\":\"Options_share_options__3BuEd\",\"share_social\":\"Options_share_social__20khk\",\"share_icon\":\"Options_share_icon__1QPF7\"};"],"sourceRoot":""}